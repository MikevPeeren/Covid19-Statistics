{"version":3,"sources":["components/StatisticCard.tsx","constants/general.ts","api/Covid19Api.ts","App.tsx","index.tsx"],"names":["StatisticCard","props","title","dateString","statistic","date","Date","parse","avatarIcon","BugReport","ReportOutlined","Security","avatarClassNames","classNames","typographyClassNames","Card","className","variant","CardHeader","classes","avatar","subheader","toLocaleDateString","year","month","day","hour","minute","second","CardContent","root","Typography","component","getCovid19Statistics","a","axios","get","then","result","data","App","useState","covid19Statistics","setCovid19Statistics","loading","setLoading","totalConfirmed","totalDeaths","totalRecovered","useEffect","getCovid19Statisticss","Countries","forEach","country","TotalConfirmed","TotalDeaths","TotalRecovered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+YAsFeA,EAvDqC,SAACC,GAAW,IACtDC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,WAAYC,EAAcH,EAAdG,UAWrBC,EAAO,IAAIC,KAAKA,KAAKC,MAAMJ,IAG3BK,ECzCuB,oBD0C3BN,EACE,kBAACO,EAAA,EAAD,MC1CsB,iBD2CpBP,EACF,kBAACQ,EAAA,EAAD,MC3CyB,oBD4CvBR,EACF,kBAACS,EAAA,EAAD,MAEA,GAGEC,EAAmBC,IAAW,wBAAyB,CAC3D,mCCrD2B,oBDqDSX,EACpC,gCCrDwB,iBDqDSA,EACjC,mCCrD2B,oBDqDSA,IAGhCY,EAAuBD,IAAW,yBAA0B,CAChE,oCC3D2B,oBD2DUX,EACrC,iCC3DwB,iBD2DUA,EAClC,oCC3D2B,oBD2DUA,IAGvC,OACE,kBAACa,EAAA,EAAD,CAAMC,UAAU,gBAAgBC,QAAQ,YACtC,kBAACC,EAAA,EAAD,CACEC,QAAS,CAAEC,OAAQR,GACnBQ,OAAQZ,EACRN,MAAOA,EACPmB,UAAS,sBAAiBhB,EAAKiB,mBAAmB,QAxCxC,CACdC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,eAoCN,kBAACC,EAAA,EAAD,CAAaV,QAAS,CAAEW,KAAMhB,IAC5B,kBAACiB,EAAA,EAAD,CAAYd,QAAQ,KAAKe,UAAU,KAChC5B,M,iBEzEE6B,EAAoB,uCAAG,sBAAAC,EAAA,sEACrBC,IACVC,IADU,UDNsB,6BCMtB,aAEVC,MAAK,SAACC,GAAD,OAAYA,EAAOC,QAHO,mFAAH,qDCiGlBC,EAtEH,WAAO,IAAD,EAIZC,mBAAoC,MAJxB,mBAEdC,EAFc,KAGdC,EAHc,OAKcF,oBAAS,GALvB,mBAKTG,EALS,KAKAC,EALA,KAOZC,EAAiB,EACjBC,EAAc,EACdC,EAAiB,EAqBrB,OAnBAC,qBAAU,WAAM,4CACd,sBAAAf,EAAA,kEACES,EADF,SAC6BV,IAD7B,kCAEEY,GAAW,GAFb,4CADc,sBAMVD,IAAYF,GAND,WAAD,wBAOZQ,KAED,CAACR,EAAmBE,IAEnBF,GACFA,EAAkBS,UAAUC,SAAQ,SAACC,GACnCP,GAAkCO,EAAQC,eAC1CP,GAA4BM,EAAQE,YACpCP,GAAkCK,EAAQG,kBAK5C,yBAAKxC,UAAU,WACb,4BAAQA,UAAU,mBF7DO,uBE8DxB0B,GACC,yBAAK1B,UAAU,6BACb,kBAAC,EAAD,CACEd,MFhEmB,kBEiEnBC,WAAYuC,EAAkBpC,KAC9BF,UAAW0C,IAEb,kBAAC,EAAD,CACE5C,MFpEgB,eEqEhBC,WAAYuC,EAAkBpC,KAC9BF,UAAW2C,IAEb,kBAAC,EAAD,CACE7C,MFxEmB,kBEyEnBC,WAAYuC,EAAkBpC,KAC9BF,UAAW4C,KAIjB,4BAAQhC,UAAU,mBAChB,wBAAIA,UAAU,uBAAd,mBACA,wBAAIA,UAAU,uBAAd,sBACA,uBAAGA,UAAU,sBAAb,iKAKA,wBAAIA,UAAU,uBAAd,qCACA,uBAAGA,UAAU,sBAAb,2ICpFRyC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3058ab57.chunk.js","sourcesContent":["// React\nimport React from 'react';\n\n// External\nimport classNames from 'classnames';\n\n// CSS\nimport './StatisticCard.scss';\n\n// Material UI\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport { BugReport, ReportOutlined, Security } from '@material-ui/icons';\n\n// Constants\nimport {\n  TOTAL_CONFIRMED,\n  TOTAL_DEATHS,\n  TOTAL_RECOVERED,\n} from '../constants/general';\n\ninterface StatisticCardProps {\n  title: string;\n  dateString: string;\n  statistic: number;\n}\n\nconst StatisticCard: React.FC<StatisticCardProps> = (props) => {\n  const { title, dateString, statistic } = props;\n\n  // Parsing incoming DateString\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  };\n  const date = new Date(Date.parse(dateString));\n\n  // Dynamic rendering of the Icon & Classes happenss here.\n  const avatarIcon =\n    title === TOTAL_CONFIRMED ? (\n      <BugReport />\n    ) : title === TOTAL_DEATHS ? (\n      <ReportOutlined />\n    ) : title === TOTAL_RECOVERED ? (\n      <Security />\n    ) : (\n      ''\n    );\n\n  const avatarClassNames = classNames('StatisticCard__Avatar', {\n    'StatisticCard__Avatar--confirmed': title === TOTAL_CONFIRMED,\n    'StatisticCard__Avatar--deaths': title === TOTAL_DEATHS,\n    'StatisticCard__Avatar--recovered': title === TOTAL_RECOVERED,\n  });\n\n  const typographyClassNames = classNames('StatisticCard__Content', {\n    'StatisticCard__Content--confirmed': title === TOTAL_CONFIRMED,\n    'StatisticCard__Content--deaths': title === TOTAL_DEATHS,\n    'StatisticCard__Content--recovered': title === TOTAL_RECOVERED,\n  });\n\n  return (\n    <Card className=\"StatisticCard\" variant=\"outlined\">\n      <CardHeader\n        classes={{ avatar: avatarClassNames }}\n        avatar={avatarIcon}\n        title={title}\n        subheader={`Updated at: ${date.toLocaleDateString('nl-NL', options)}`}\n      />\n      <CardContent classes={{ root: typographyClassNames }}>\n        <Typography variant=\"h3\" component=\"p\">\n          {statistic}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StatisticCard;\n","// Api Related\nexport const COVID_19_BASE_API_URL = 'https://api.covid19api.com';\n\n// General\nexport const COVID_19_HEADER = 'COVID-19 Statistics';\nexport const TOTAL_CONFIRMED = 'Total Confirmed';\nexport const TOTAL_DEATHS = 'Total Deaths';\nexport const TOTAL_RECOVERED = 'Total Recovered';\n","// Axios/Api\nimport axios from 'axios';\n\n// Constants\nimport { COVID_19_BASE_API_URL } from '../constants/general';\n\nexport const getCovid19Statistics = async () => {\n  return await axios\n    .get(`${COVID_19_BASE_API_URL}/summary`)\n    .then((result) => result.data);\n};\n\nexport const getCovid19StatisticsByCountry = async (country: string) => {\n  return await axios\n    .get(`${COVID_19_BASE_API_URL}/total/country/${country}/status/confirmed`)\n    .then((result) => result.data);\n};\n","// React\nimport React, { useState, useEffect } from 'react';\n\n// CSS\nimport './App.scss';\n\n// Components\nimport StatisticCard from './components/StatisticCard';\n\n// Api\nimport { getCovid19Statistics } from './api/Covid19Api';\n\n// Constants\nimport {\n  COVID_19_HEADER,\n  TOTAL_CONFIRMED,\n  TOTAL_DEATHS,\n  TOTAL_RECOVERED,\n} from './constants/general';\n\ninterface ICovid19Statistics {\n  Countries: [\n    {\n      TotalConfirmed: number;\n      NewConfirmed: number;\n      TotalDeaths: number;\n      NewDeaths: number;\n      TotalRecovered: number;\n    },\n  ];\n  Date: string;\n}\n\nconst App = () => {\n  const [\n    covid19Statistics,\n    setCovid19Statistics,\n  ] = useState<ICovid19Statistics | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  let totalConfirmed = 0;\n  let totalDeaths = 0;\n  let totalRecovered = 0;\n\n  useEffect(() => {\n    async function getCovid19Statisticss() {\n      setCovid19Statistics(await getCovid19Statistics());\n      setLoading(false);\n    }\n\n    if (loading && !covid19Statistics) {\n      getCovid19Statisticss();\n    }\n  }, [covid19Statistics, loading]);\n\n  if (covid19Statistics) {\n    covid19Statistics.Countries.forEach((country) => {\n      totalConfirmed = totalConfirmed + country.TotalConfirmed;\n      totalDeaths = totalDeaths + country.TotalDeaths;\n      totalRecovered = totalRecovered + country.TotalRecovered;\n    });\n  }\n\n  return (\n    <div className=\"Covid19\">\n      <header className=\"Covid19__Header\">{COVID_19_HEADER}</header>\n      {covid19Statistics && (\n        <div className=\"Covid19__GlobalStatistics\">\n          <StatisticCard\n            title={TOTAL_CONFIRMED}\n            dateString={covid19Statistics.Date}\n            statistic={totalConfirmed}\n          ></StatisticCard>\n          <StatisticCard\n            title={TOTAL_DEATHS}\n            dateString={covid19Statistics.Date}\n            statistic={totalDeaths}\n          ></StatisticCard>\n          <StatisticCard\n            title={TOTAL_RECOVERED}\n            dateString={covid19Statistics.Date}\n            statistic={totalRecovered}\n          ></StatisticCard>\n        </div>\n      )}\n      <footer className=\"Covid19__Footer\">\n        <h3 className=\"Covid19__Footer--h3\">About this data</h3>\n        <h4 className=\"Covid19__Footer--h4\">It changes rapidly</h4>\n        <p className=\"Covid19__Footer--p\">\n          This data changes rapidly, so what’s shown may be out of date.\n          Information about reported cases is also available on the World Health\n          Organization site.\n        </p>\n        <h4 className=\"Covid19__Footer--h4\">It doesn’t include all cases</h4>\n        <p className=\"Covid19__Footer--p\">\n          Confirmed cases aren’t all cases. They only include people who tested\n          positive. Testing rules and availability vary by country.\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS\nimport './index.scss';\n\n// Components\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}